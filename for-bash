# git-logger
preexec(){
	COMMAND=$@
	COMMAND_TYPE=`type $COMMAND 2> /dev/null`
	if [[ ! -z $COMMAND_TYPE ]] && [[ $COMMAND_TYPE =~ "is aliased to" ]]; then
		REMOVE_ALIAS=`echo $COMMAND_TYPE | sed -e "s/^.* is aliased to //"`
		COMMAND=${REMOVE_ALIAS:1:${#REMOVE_ALIAS}-2}
	fi

	IS_INSIDE_REPOSITORY=`command git rev-parse --is-inside-work-tree 2> /dev/null`
	REPOSITORY_ROOT_PATH=`command git rev-parse --show-toplevel 2> /dev/null`
	REPOSITORY_ROOT_BASE_NAME=`basename $REPOSITORY_ROOT_PATH`
	REPOSITORY_ROOT_DIR_NAME=`dirname $REPOSITORY_ROOT_PATH`

	TIMESTAMP=`date +%s`
	BEFORE_SHA=`command git rev-parse --verify HEAD`
	USER_NAME=`command git config user.name`
	USER_EMAIL=`command git config user.email`

	if [[ $COMMAND =~ ^git\  ]] && [ `$IS_INSIDE_REPOSITORY` = `true` ]; then
		echo -n \{\"ts\":$TIMESTAMP,\"type\":\"LOG\",\"command\":\"$COMMAND\",\"user_name\":\"$USER_NAME\",\"user_email\":\"$USER_EMAIL\",\"before_sha\":\"$BEFORE_SHA\",\"root_path\":\"$REPOSITORY_ROOT_BASE_NAME\",\"execute_path\":\"${PWD#$REPOSITORY_ROOT_DIR_NAME/}\"\}, >> $REPOSITORY_ROOT_PATH/.git/.git_history
	fi
}

preexec_invoke_exec(){
    [ -n "$COMP_LINE" ] && return
    [ "$BASH_COMMAND" = "$PROMPT_COMMAND" ] && return
    local this_command=`history 1 | sed -e "s/^[ ]*[0-9]*[ ]*//g"`;
    preexec "$this_command"
}
trap 'preexec_invoke_exec' DEBUG
